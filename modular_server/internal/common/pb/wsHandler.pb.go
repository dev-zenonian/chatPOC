// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.15.8
// source: wsHandler.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PassMessageToClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageID      string   `protobuf:"bytes,1,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	HandlerID      string   `protobuf:"bytes,2,opt,name=HandlerID,proto3" json:"HandlerID,omitempty"`
	HandlerAddress string   `protobuf:"bytes,3,opt,name=HandlerAddress,proto3" json:"HandlerAddress,omitempty"`
	Message        *Message `protobuf:"bytes,4,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *PassMessageToClientRequest) Reset() {
	*x = PassMessageToClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wsHandler_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PassMessageToClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PassMessageToClientRequest) ProtoMessage() {}

func (x *PassMessageToClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wsHandler_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PassMessageToClientRequest.ProtoReflect.Descriptor instead.
func (*PassMessageToClientRequest) Descriptor() ([]byte, []int) {
	return file_wsHandler_proto_rawDescGZIP(), []int{0}
}

func (x *PassMessageToClientRequest) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

func (x *PassMessageToClientRequest) GetHandlerID() string {
	if x != nil {
		return x.HandlerID
	}
	return ""
}

func (x *PassMessageToClientRequest) GetHandlerAddress() string {
	if x != nil {
		return x.HandlerAddress
	}
	return ""
}

func (x *PassMessageToClientRequest) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type PassMessageToClientResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  string `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PassMessageToClientResponse) Reset() {
	*x = PassMessageToClientResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wsHandler_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PassMessageToClientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PassMessageToClientResponse) ProtoMessage() {}

func (x *PassMessageToClientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wsHandler_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PassMessageToClientResponse.ProtoReflect.Descriptor instead.
func (*PassMessageToClientResponse) Descriptor() ([]byte, []int) {
	return file_wsHandler_proto_rawDescGZIP(), []int{1}
}

func (x *PassMessageToClientResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *PassMessageToClientResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

var File_wsHandler_proto protoreflect.FileDescriptor

var file_wsHandler_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x77, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaa, 0x01, 0x0a, 0x1a, 0x50, 0x61, 0x73, 0x73, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x26, 0x0a, 0x0e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x47, 0x0a, 0x1b, 0x50, 0x61, 0x73, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x70, 0x0a, 0x10, 0x57,
	0x53, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x5c, 0x0a, 0x13, 0x50, 0x61, 0x73, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x61, 0x73, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x06, 0x5a,
	0x04, 0x2e, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_wsHandler_proto_rawDescOnce sync.Once
	file_wsHandler_proto_rawDescData = file_wsHandler_proto_rawDesc
)

func file_wsHandler_proto_rawDescGZIP() []byte {
	file_wsHandler_proto_rawDescOnce.Do(func() {
		file_wsHandler_proto_rawDescData = protoimpl.X.CompressGZIP(file_wsHandler_proto_rawDescData)
	})
	return file_wsHandler_proto_rawDescData
}

var file_wsHandler_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_wsHandler_proto_goTypes = []interface{}{
	(*PassMessageToClientRequest)(nil),  // 0: proto.PassMessageToClientRequest
	(*PassMessageToClientResponse)(nil), // 1: proto.PassMessageToClientResponse
	(*Message)(nil),                     // 2: proto.Message
}
var file_wsHandler_proto_depIdxs = []int32{
	2, // 0: proto.PassMessageToClientRequest.Message:type_name -> proto.Message
	0, // 1: proto.WSHandlerService.PassMessageToClient:input_type -> proto.PassMessageToClientRequest
	1, // 2: proto.WSHandlerService.PassMessageToClient:output_type -> proto.PassMessageToClientResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_wsHandler_proto_init() }
func file_wsHandler_proto_init() {
	if File_wsHandler_proto != nil {
		return
	}
	file_model_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_wsHandler_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PassMessageToClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wsHandler_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PassMessageToClientResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wsHandler_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wsHandler_proto_goTypes,
		DependencyIndexes: file_wsHandler_proto_depIdxs,
		MessageInfos:      file_wsHandler_proto_msgTypes,
	}.Build()
	File_wsHandler_proto = out.File
	file_wsHandler_proto_rawDesc = nil
	file_wsHandler_proto_goTypes = nil
	file_wsHandler_proto_depIdxs = nil
}
